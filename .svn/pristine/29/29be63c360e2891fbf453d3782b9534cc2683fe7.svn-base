#ifndef TL_LEXER_TOKENS_HPP
#define TL_LEXER_TOKENS_HPP
namespace TL {
namespace TokensC {
   enum yytokentype {
     ADD_ASSIGN = 258,
     ANDAND = 259,
     AND_ASSIGN = 260,
     ASM = 261,
     AUTO = 262,
     TOKEN_BOOL = 263,
     BOOLEAN_LITERAL = 264,
     BREAK = 265,
     CASE = 266,
     TOKEN_CHAR = 267,
     CHARACTER_LITERAL = 268,
     TOKEN_CONST = 269,
     CONTINUE = 270,
     DECIMAL_LITERAL = 271,
     DEFAULT = 272,
     DIV_ASSIGN = 273,
     DO = 274,
     TOKEN_DOUBLE = 275,
     ELSE = 276,
     ENUM = 277,
     EQUAL = 278,
     EXTERN = 279,
     TOKEN_FLOAT = 280,
     FLOATING_LITERAL = 281,
     HEXADECIMAL_FLOAT = 282,
     FOR = 283,
     GOTO = 284,
     GREATER_OR_EQUAL = 285,
     HEXADECIMAL_LITERAL = 286,
     IDENTIFIER = 287,
     IF = 288,
     INLINE = 289,
     TOKEN_INT = 290,
     LEFT = 291,
     LEFT_ASSIGN = 292,
     LESS_OR_EQUAL = 293,
     TOKEN_LONG = 294,
     MINUSMINUS = 295,
     MOD_ASSIGN = 296,
     MUL_ASSIGN = 297,
     NOT_EQUAL = 298,
     OCTAL_LITERAL = 299,
     OR_ASSIGN = 300,
     OROR = 301,
     PLUSPLUS = 302,
     PTR_OP = 303,
     REGISTER = 304,
     RETURN = 305,
     RIGHT = 306,
     RIGHT_ASSIGN = 307,
     TOKEN_SHORT = 308,
     TOKEN_SIGNED = 309,
     SIZEOF = 310,
     STATIC = 311,
     STRING_LITERAL = 312,
     STRUCT = 313,
     SUB_ASSIGN = 314,
     SWITCH = 315,
     ELLIPSIS = 316,
     TYPEDEF = 317,
     UNION = 318,
     TOKEN_UNSIGNED = 319,
     TOKEN_VOID = 320,
     TOKEN_VOLATILE = 321,
     WHILE = 322,
     XOR_ASSIGN = 323,
     UNKNOWN_PRAGMA = 324,
     PP_COMMENT = 325,
     PP_TOKEN = 326,
     BUILTIN_VA_ARG = 327,
     BUILTIN_OFFSETOF = 328,
     BUILTIN_CHOOSE_EXPR = 329,
     BUILTIN_TYPES_COMPATIBLE_P = 330,
     ALIGNOF = 331,
     EXTENSION = 332,
     REAL = 333,
     IMAG = 334,
     LABEL = 335,
     COMPLEX = 336,
     IMAGINARY = 337,
     TYPEOF = 338,
     RESTRICT = 339,
     ATTRIBUTE = 340,
     THREAD = 341,
     SUBPARSE_EXPRESSION = 342,
     SUBPARSE_EXPRESSION_LIST = 343,
     SUBPARSE_STATEMENT = 344,
     SUBPARSE_DECLARATION = 345,
     SUBPARSE_MEMBER = 346,
     SUBPARSE_TYPE = 347,
     SUBPARSE_TYPE_LIST = 348,
     SUBPARSE_ID_EXPRESSION = 349,
     STATEMENT_PLACEHOLDER = 350,
     VERBATIM_PRAGMA = 351,
     VERBATIM_CONSTRUCT = 352,
     VERBATIM_TYPE = 353,
     VERBATIM_TEXT = 354,
     PRAGMA_CUSTOM = 355,
     PRAGMA_CUSTOM_NEWLINE = 356,
     PRAGMA_CUSTOM_DIRECTIVE = 357,
     PRAGMA_CUSTOM_CONSTRUCT = 358,
     PRAGMA_CUSTOM_CONSTRUCT_NOEND = 359,
     PRAGMA_CUSTOM_END_CONSTRUCT = 360,
     PRAGMA_CUSTOM_CLAUSE = 361,
     PRAGMA_CLAUSE_ARG_TEXT = 362,
     CONSTRUCT = 363,
     SUBPARSE_OMP_UDR_DECLARE = 364,
     SUBPARSE_OMP_UDR_DECLARE_2 = 365,
     SUBPARSE_OMP_UDR_IDENTITY = 366,
     OMP_UDR_CONSTRUCTOR = 367,
     SUBPARSE_OMP_OPERATOR_NAME = 368,
     TWO_DOTS = 369,
     SUBPARSE_SUPERSCALAR_DECLARATOR = 370,
     SUBPARSE_SUPERSCALAR_DECLARATOR_LIST = 371,
     SUBPARSE_SUPERSCALAR_EXPRESSION = 372,
     UPC_MYTHREAD = 373,
     UPC_RELAXED = 374,
     UPC_SHARED = 375,
     UPC_STRICT = 376,
     UPC_THREADS = 377,
     UPC_BARRIER = 378,
     UPC_BLOCKSIZEOF = 379,
     UPC_ELEMSIZEOF = 380,
     UPC_FENCE = 381,
     UPC_FORALL = 382,
     UPC_LOCALSIZEOF = 383,
     UPC_MAX_BLOCKSIZE = 384,
     UPC_NOTIFY = 385,
     UPC_WAIT = 386,
     CUDA_DEVICE = 387,
     CUDA_GLOBAL = 388,
     CUDA_HOST = 389,
     CUDA_CONSTANT = 390,
     CUDA_SHARED = 391,
     CUDA_KERNEL_LEFT = 392,
     CUDA_KERNEL_RIGHT = 393,
     XL_BUILTIN_SPEC = 394
   };
}
namespace TokensCXX {
   enum yytokentype {
     ADD_ASSIGN = 258,
     ANDAND = 259,
     AND_ASSIGN = 260,
     ASM = 261,
     AUTO = 262,
     TOKEN_BOOL = 263,
     BOOLEAN_LITERAL = 264,
     BREAK = 265,
     CASE = 266,
     CATCH = 267,
     TOKEN_CHAR = 268,
     CHARACTER_LITERAL = 269,
     CLASS = 270,
     TOKEN_CONST = 271,
     CONST_CAST = 272,
     CONTINUE = 273,
     DECIMAL_LITERAL = 274,
     DEFAULT = 275,
     TOKEN_DELETE = 276,
     DIV_ASSIGN = 277,
     DO = 278,
     TWO_COLONS = 279,
     TOKEN_DOUBLE = 280,
     DYNAMIC_CAST = 281,
     ELSE = 282,
     ENUM = 283,
     EQUAL = 284,
     DECLTYPE = 285,
     EXPLICIT = 286,
     EXPORT = 287,
     EXTERN = 288,
     TOKEN_FLOAT = 289,
     FLOATING_LITERAL = 290,
     HEXADECIMAL_FLOAT = 291,
     FOR = 292,
     FRIEND = 293,
     GOTO = 294,
     HEXADECIMAL_LITERAL = 295,
     IDENTIFIER = 296,
     IF = 297,
     INLINE = 298,
     TOKEN_INT = 299,
     LEFT = 300,
     LEFT_ASSIGN = 301,
     LESS_OR_EQUAL = 302,
     TOKEN_LONG = 303,
     MINUSMINUS = 304,
     MOD_ASSIGN = 305,
     MUL_ASSIGN = 306,
     MUTABLE = 307,
     NAMESPACE = 308,
     TOKEN_NEW = 309,
     NOT_EQUAL = 310,
     OCTAL_LITERAL = 311,
     OPERATOR = 312,
     OR_ASSIGN = 313,
     OROR = 314,
     PLUSPLUS = 315,
     PRIVATE = 316,
     PROTECTED = 317,
     PTR_OP = 318,
     PTR_OP_MUL = 319,
     PUBLIC = 320,
     REGISTER = 321,
     REINTERPRET_CAST = 322,
     RETURN = 323,
     TOKEN_SHORT = 324,
     TOKEN_SIGNED = 325,
     SIZEOF = 326,
     STATIC = 327,
     STATIC_CAST = 328,
     STRING_LITERAL = 329,
     STRUCT = 330,
     SUB_ASSIGN = 331,
     SWITCH = 332,
     TEMPLATE = 333,
     TOKEN_THIS = 334,
     THROW = 335,
     ELLIPSIS = 336,
     TRY = 337,
     TYPEDEF = 338,
     TYPEID = 339,
     TYPENAME = 340,
     UNION = 341,
     TOKEN_UNSIGNED = 342,
     USING = 343,
     VIRTUAL = 344,
     TOKEN_VOID = 345,
     TOKEN_VOLATILE = 346,
     TOKEN_WCHAR_T = 347,
     WHILE = 348,
     XOR_ASSIGN = 349,
     STATIC_ASSERT = 350,
     UNKNOWN_PRAGMA = 351,
     PP_COMMENT = 352,
     PP_TOKEN = 353,
     GXX_HAS_NOTHROW_ASSIGN = 354,
     GXX_HAS_NOTHROW_CONSTRUCTOR = 355,
     GXX_HAS_NOTHROW_COPY = 356,
     GXX_HAS_TRIVIAL_ASSIGN = 357,
     GXX_HAS_TRIVIAL_CONSTRUCTOR = 358,
     GXX_HAS_TRIVIAL_COPY = 359,
     GXX_HAS_TRIVIAL_DESTRUCTOR = 360,
     GXX_HAS_VIRTUAL_DESTRUCTOR = 361,
     GXX_IS_ABSTRACT = 362,
     GXX_IS_BASE_OF = 363,
     GXX_IS_CLASS = 364,
     GXX_IS_CONVERTIBLE_TO = 365,
     GXX_IS_EMPTY = 366,
     GXX_IS_ENUM = 367,
     GXX_IS_POD = 368,
     GXX_IS_POLYMORPHIC = 369,
     GXX_IS_UNION = 370,
     AB1 = 371,
     AB2 = 372,
     BUILTIN_VA_ARG = 373,
     BUILTIN_OFFSETOF = 374,
     ALIGNOF = 375,
     EXTENSION = 376,
     REAL = 377,
     IMAG = 378,
     LABEL = 379,
     COMPLEX = 380,
     TYPEOF = 381,
     RESTRICT = 382,
     ATTRIBUTE = 383,
     THREAD = 384,
     SUBPARSE_EXPRESSION = 385,
     SUBPARSE_EXPRESSION_LIST = 386,
     SUBPARSE_STATEMENT = 387,
     SUBPARSE_DECLARATION = 388,
     SUBPARSE_MEMBER = 389,
     SUBPARSE_TYPE = 390,
     SUBPARSE_TYPE_LIST = 391,
     SUBPARSE_ID_EXPRESSION = 392,
     STATEMENT_PLACEHOLDER = 393,
     VERBATIM_PRAGMA = 394,
     VERBATIM_CONSTRUCT = 395,
     VERBATIM_TYPE = 396,
     VERBATIM_TEXT = 397,
     PRAGMA_CUSTOM = 398,
     PRAGMA_CUSTOM_NEWLINE = 399,
     PRAGMA_CUSTOM_DIRECTIVE = 400,
     PRAGMA_CUSTOM_CONSTRUCT = 401,
     PRAGMA_CUSTOM_CONSTRUCT_NOEND = 402,
     PRAGMA_CUSTOM_END_CONSTRUCT = 403,
     PRAGMA_CUSTOM_CLAUSE = 404,
     PRAGMA_CLAUSE_ARG_TEXT = 405,
     CONSTRUCT = 406,
     SUBPARSE_OMP_UDR_DECLARE = 407,
     SUBPARSE_OMP_UDR_DECLARE_2 = 408,
     SUBPARSE_OMP_UDR_IDENTITY = 409,
     OMP_UDR_CONSTRUCTOR = 410,
     SUBPARSE_OMP_OPERATOR_NAME = 411,
     TWO_DOTS = 412,
     SUBPARSE_SUPERSCALAR_DECLARATOR = 413,
     SUBPARSE_SUPERSCALAR_DECLARATOR_LIST = 414,
     SUBPARSE_SUPERSCALAR_EXPRESSION = 415,
     CUDA_DEVICE = 416,
     CUDA_GLOBAL = 417,
     CUDA_HOST = 418,
     CUDA_CONSTANT = 419,
     CUDA_SHARED = 420,
     CUDA_KERNEL_LEFT = 421,
     CUDA_KERNEL_RIGHT = 422,
     XL_BUILTIN_SPEC = 423
   };
}
}
#endif // TL_LEXER_TOKENS_HPP
