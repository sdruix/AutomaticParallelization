# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

##########################################################################
#  (C) Copyright 2006-2011 Barcelona Supercomputing Center               #
#                          Centro Nacional de Supercomputacion           #
#                                                                        #
#  This file is part of Mercurium C/C++ source-to-source compiler.       #
#                                                                        #
#  See AUTHORS file in the top level directory for information           #
#  regarding developers and contributors.                                #
#                                                                        #
#  This library is free software; you can redistribute it and/or         #
#  modify it under the terms of the GNU Lesser General Public            #
#  License as published by the Free Software Foundation; either          #
#  version 3 of the License, or (at your option) any later version.      #
#                                                                        #
#  Mercurium C/C++ source-to-source compiler is distributed in the hope  #
#  that it will be useful, but WITHOUT ANY WARRANTY; without even the    #
#  implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR       #
#  PURPOSE.  See the GNU Lesser General Public License for more          #
#  details.                                                              #
#                                                                        #
#  You should have received a copy of the GNU Lesser General Public      #
#  License along with Mercurium C/C++ source-to-source compiler; if      #
#  not, write to the Free Software Foundation, Inc., 675 Mass Ave,       #
#  Cambridge, MA 02139, USA.                                             #
##########################################################################

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
DIST_COMMON = $(srcdir)/../../Makefile.phases $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
subdir = src/tl/omp/nanos4
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(phasesdir)"
LTLIBRARIES = $(phases_LTLIBRARIES)
libtlomp_nanos4_la_DEPENDENCIES = $(tl_libadd) \
	../core/libtlomp-core.la ../nanos-common/libtlnanos-common.la
am__objects_1 =
am_libtlomp_nanos4_la_OBJECTS = libtlomp_nanos4_la-tl-omptransform.lo \
	libtlomp_nanos4_la-tl-atomic.lo \
	libtlomp_nanos4_la-tl-barrier.lo \
	libtlomp_nanos4_la-tl-critical.lo \
	libtlomp_nanos4_la-tl-flush.lo libtlomp_nanos4_la-tl-for.lo \
	libtlomp_nanos4_la-tl-functionfilter.lo \
	libtlomp_nanos4_la-tl-loop.lo libtlomp_nanos4_la-tl-master.lo \
	libtlomp_nanos4_la-tl-datasharing.lo \
	libtlomp_nanos4_la-tl-debug.lo \
	libtlomp_nanos4_la-tl-symbols.lo \
	libtlomp_nanos4_la-tl-warning.lo \
	libtlomp_nanos4_la-tl-ordered.lo \
	libtlomp_nanos4_la-tl-outline.lo \
	libtlomp_nanos4_la-tl-parallel.lo \
	libtlomp_nanos4_la-tl-parallel_for.lo \
	libtlomp_nanos4_la-tl-parallel_sections.lo \
	libtlomp_nanos4_la-tl-reduction.lo \
	libtlomp_nanos4_la-tl-section.lo \
	libtlomp_nanos4_la-tl-sections.lo \
	libtlomp_nanos4_la-tl-single.lo libtlomp_nanos4_la-tl-spawn.lo \
	libtlomp_nanos4_la-tl-spawn-old.lo \
	libtlomp_nanos4_la-tl-declare.lo libtlomp_nanos4_la-tl-task.lo \
	libtlomp_nanos4_la-tl-taskwait.lo \
	libtlomp_nanos4_la-tl-taskyield.lo \
	libtlomp_nanos4_la-tl-taskgroup.lo \
	libtlomp_nanos4_la-tl-threadprivate.lo \
	libtlomp_nanos4_la-tl-transaction.lo \
	libtlomp_nanos4_la-tl-adf.lo \
	libtlomp_nanos4_la-tl-transaction-expression.lo \
	libtlomp_nanos4_la-tl-pretransform.lo \
	libtlomp_nanos4_la-tl-target.lo $(am__objects_1)
libtlomp_nanos4_la_OBJECTS = $(am_libtlomp_nanos4_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
libtlomp_nanos4_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) \
	$(libtlomp_nanos4_la_LDFLAGS) $(LDFLAGS) -o $@
libtlomp_serialize_la_DEPENDENCIES = $(tl_libadd) \
	../core/libtlomp-core.la
am_libtlomp_serialize_la_OBJECTS =  \
	libtlomp_serialize_la-tl-ompserialize.lo $(am__objects_1)
libtlomp_serialize_la_OBJECTS = $(am_libtlomp_serialize_la_OBJECTS)
libtlomp_serialize_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libtlomp_serialize_la_CXXFLAGS) $(CXXFLAGS) \
	$(libtlomp_serialize_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX   " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD " $@;
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libtlomp_nanos4_la_SOURCES) \
	$(libtlomp_serialize_la_SOURCES)
DIST_SOURCES = $(libtlomp_nanos4_la_SOURCES) \
	$(libtlomp_serialize_la_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BASH = @BASH@
BISON = @BISON@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CC_FOR_BUILD = @CC_FOR_BUILD@
CFLAGS = @CFLAGS@
COMPILER_NAMES = @COMPILER_NAMES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CUDA_INC = @CUDA_INC@
CUDA_LIB = @CUDA_LIB@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_SUPERSCALAR = @ENABLE_SUPERSCALAR@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
FLEX = @FLEX@
FRONTEND_EXTENSIONS = @FRONTEND_EXTENSIONS@
GIT = @GIT@
GPERF = @GPERF@
GREP = @GREP@
GXLC = @GXLC@
GXLCXX = @GXLCXX@
ICC = @ICC@
ICPC = @ICPC@
INSTALL = @INSTALL@
INSTALL_CONFIG_FILES = @INSTALL_CONFIG_FILES@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSTRUMENTATION_PHASE = @INSTRUMENTATION_PHASE@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MINTAKA_INCLUDES = @MINTAKA_INCLUDES@
MINTAKA_LIBS = @MINTAKA_LIBS@
MKDIR_P = @MKDIR_P@
NANOS4_32_BIT_COMPAT = @NANOS4_32_BIT_COMPAT@
NANOS4_INCLUDES = @NANOS4_INCLUDES@
NANOS4_LIBS = @NANOS4_LIBS@
NANOX_INCLUDES = @NANOX_INCLUDES@
NANOX_INSTRUMENTATION = @NANOX_INSTRUMENTATION@
NANOX_LIBS = @NANOX_LIBS@
NEBELUNG_INCLUDES = @NEBELUNG_INCLUDES@
NEBELUNG_LIBS = @NEBELUNG_LIBS@
NM = @NM@
NMEDIT = @NMEDIT@
NVCC = @NVCC@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
PYTHON = @PYTHON@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
RANLIB = @RANLIB@
RPATH_PARAMETER = @RPATH_PARAMETER@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
SUPERSCALAR_INCLUDES = @SUPERSCALAR_INCLUDES@
SUPERSCALAR_LIBS = @SUPERSCALAR_LIBS@
TL_EXTENSIONS = @TL_EXTENSIONS@
TL_OMP_EXTENSIONS = @TL_OMP_EXTENSIONS@
VERSION = @VERSION@
WIN32_NO_UNDEFINED = @WIN32_NO_UNDEFINED@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
fortran_enabled = @fortran_enabled@
gpu_valid = @gpu_valid@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sqlite3_CFLAGS = @sqlite3_CFLAGS@
sqlite3_LIBS = @sqlite3_LIBS@
srcdir = @srcdir@
superscalar_version = @superscalar_version@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
phasesdir = $(pkglibdir)
tl_cflags = -I $(top_srcdir)/src/tl \
    -I $(top_srcdir)/src/frontend \
    -I $(top_srcdir)/src/driver \
    -I $(top_srcdir)/lib \
    -I $(top_builddir)/src/tl \
    -I $(top_builddir)/src/frontend \
    -I $(top_builddir)/src/driver \
    -I $(top_builddir)/lib

tl_cxxflags = $(tl_cflags)
tl_libadd = $(top_builddir)/src/tl/libtl.la \
        $(top_builddir)/src/frontend/libmcxx-process.la \
        $(top_builddir)/src/frontend/libmcxx.la

no_undefined = @WIN32_NO_UNDEFINED@
tl_ldflags = -avoid-version $(no_undefined)
phases_LTLIBRARIES = libtlomp-nanos4.la libtlomp-serialize.la 
END = 
tl_omp_flags = -Wall $(tl_cflags) -I $(srcdir)/../core -I $(srcdir)/../nanos-common

#### libtl-omp-nanos4.la
libtlomp_nanos4_la_SOURCES = \
   tl-omptransform.cpp \
   tl-omptransform.hpp \
   tl-atomic.cpp \
   tl-barrier.cpp \
   tl-critical.cpp \
   tl-flush.cpp \
   tl-for.cpp \
   tl-functionfilter.cpp \
   tl-functionfilter.hpp \
   tl-loop.cpp \
   tl-master.cpp \
   tl-datasharing.cpp \
   tl-debug.cpp \
   tl-symbols.cpp \
   tl-warning.cpp \
   tl-ordered.cpp \
   tl-outline.cpp \
   tl-parallel.cpp \
   tl-parallel_for.cpp \
   tl-parallel_sections.cpp \
   tl-parameterinfo.hpp \
   tl-reduction.cpp \
   tl-section.cpp \
   tl-sections.cpp \
   tl-single.cpp \
   tl-spawn.cpp \
   tl-spawn-old.cpp \
   tl-declare.cpp \
   tl-task.cpp \
   tl-taskwait.cpp \
   tl-taskyield.cpp \
   tl-taskgroup.cpp \
   tl-threadprivate.cpp \
   tl-taskserialize.hpp \
   tl-transaction.cpp \
   tl-adf.cpp \
   tl-transaction-expression.hpp \
   tl-transaction-expression.cpp \
   tl-pretransform.hpp \
   tl-pretransform.cpp \
   tl-target.cpp \
   $(END)

libtlomp_nanos4_la_CFLAGS = $(tl_omp_flags)
libtlomp_nanos4_la_CXXFLAGS = $(tl_omp_flags)
libtlomp_nanos4_la_LDFLAGS = $(tl_ldflags)
libtlomp_nanos4_la_LIBADD = $(tl_libadd) ../core/libtlomp-core.la ../nanos-common/libtlnanos-common.la

#### libtl-omp-serialize.la
libtlomp_serialize_la_CFLAGS = $(tl_omp_flags)
libtlomp_serialize_la_CXXFLAGS = $(tl_omp_flags)
libtlomp_serialize_la_LDFLAGS = $(tl_ldflags)
libtlomp_serialize_la_LIBADD = $(tl_libadd) ../core/libtlomp-core.la
libtlomp_serialize_la_SOURCES = \
   tl-ompserialize.hpp \
   tl-ompserialize.cpp \
   tl-taskserialize.hpp \
   $(END)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/../../Makefile.phases $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/tl/omp/nanos4/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/tl/omp/nanos4/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-phasesLTLIBRARIES: $(phases_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(phasesdir)" || $(MKDIR_P) "$(DESTDIR)$(phasesdir)"
	@list='$(phases_LTLIBRARIES)'; test -n "$(phasesdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(phasesdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(phasesdir)"; \
	}

uninstall-phasesLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(phases_LTLIBRARIES)'; test -n "$(phasesdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(phasesdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(phasesdir)/$$f"; \
	done

clean-phasesLTLIBRARIES:
	-test -z "$(phases_LTLIBRARIES)" || rm -f $(phases_LTLIBRARIES)
	@list='$(phases_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libtlomp-nanos4.la: $(libtlomp_nanos4_la_OBJECTS) $(libtlomp_nanos4_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libtlomp_nanos4_la_LINK) -rpath $(phasesdir) $(libtlomp_nanos4_la_OBJECTS) $(libtlomp_nanos4_la_LIBADD) $(LIBS)
libtlomp-serialize.la: $(libtlomp_serialize_la_OBJECTS) $(libtlomp_serialize_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libtlomp_serialize_la_LINK) -rpath $(phasesdir) $(libtlomp_serialize_la_OBJECTS) $(libtlomp_serialize_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-adf.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-atomic.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-barrier.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-critical.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-datasharing.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-debug.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-declare.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-flush.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-for.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-functionfilter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-loop.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-master.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-omptransform.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-ordered.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-outline.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-parallel.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-parallel_for.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-parallel_sections.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-pretransform.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-reduction.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-section.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-sections.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-single.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-spawn-old.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-spawn.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-symbols.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-target.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-task.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-taskgroup.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-taskwait.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-taskyield.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-threadprivate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-transaction-expression.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-transaction.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_nanos4_la-tl-warning.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtlomp_serialize_la-tl-ompserialize.Plo@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

libtlomp_nanos4_la-tl-omptransform.lo: tl-omptransform.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-omptransform.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-omptransform.Tpo -c -o libtlomp_nanos4_la-tl-omptransform.lo `test -f 'tl-omptransform.cpp' || echo '$(srcdir)/'`tl-omptransform.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-omptransform.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-omptransform.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-omptransform.cpp' object='libtlomp_nanos4_la-tl-omptransform.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-omptransform.lo `test -f 'tl-omptransform.cpp' || echo '$(srcdir)/'`tl-omptransform.cpp

libtlomp_nanos4_la-tl-atomic.lo: tl-atomic.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-atomic.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-atomic.Tpo -c -o libtlomp_nanos4_la-tl-atomic.lo `test -f 'tl-atomic.cpp' || echo '$(srcdir)/'`tl-atomic.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-atomic.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-atomic.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-atomic.cpp' object='libtlomp_nanos4_la-tl-atomic.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-atomic.lo `test -f 'tl-atomic.cpp' || echo '$(srcdir)/'`tl-atomic.cpp

libtlomp_nanos4_la-tl-barrier.lo: tl-barrier.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-barrier.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-barrier.Tpo -c -o libtlomp_nanos4_la-tl-barrier.lo `test -f 'tl-barrier.cpp' || echo '$(srcdir)/'`tl-barrier.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-barrier.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-barrier.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-barrier.cpp' object='libtlomp_nanos4_la-tl-barrier.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-barrier.lo `test -f 'tl-barrier.cpp' || echo '$(srcdir)/'`tl-barrier.cpp

libtlomp_nanos4_la-tl-critical.lo: tl-critical.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-critical.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-critical.Tpo -c -o libtlomp_nanos4_la-tl-critical.lo `test -f 'tl-critical.cpp' || echo '$(srcdir)/'`tl-critical.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-critical.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-critical.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-critical.cpp' object='libtlomp_nanos4_la-tl-critical.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-critical.lo `test -f 'tl-critical.cpp' || echo '$(srcdir)/'`tl-critical.cpp

libtlomp_nanos4_la-tl-flush.lo: tl-flush.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-flush.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-flush.Tpo -c -o libtlomp_nanos4_la-tl-flush.lo `test -f 'tl-flush.cpp' || echo '$(srcdir)/'`tl-flush.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-flush.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-flush.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-flush.cpp' object='libtlomp_nanos4_la-tl-flush.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-flush.lo `test -f 'tl-flush.cpp' || echo '$(srcdir)/'`tl-flush.cpp

libtlomp_nanos4_la-tl-for.lo: tl-for.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-for.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-for.Tpo -c -o libtlomp_nanos4_la-tl-for.lo `test -f 'tl-for.cpp' || echo '$(srcdir)/'`tl-for.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-for.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-for.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-for.cpp' object='libtlomp_nanos4_la-tl-for.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-for.lo `test -f 'tl-for.cpp' || echo '$(srcdir)/'`tl-for.cpp

libtlomp_nanos4_la-tl-functionfilter.lo: tl-functionfilter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-functionfilter.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-functionfilter.Tpo -c -o libtlomp_nanos4_la-tl-functionfilter.lo `test -f 'tl-functionfilter.cpp' || echo '$(srcdir)/'`tl-functionfilter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-functionfilter.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-functionfilter.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-functionfilter.cpp' object='libtlomp_nanos4_la-tl-functionfilter.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-functionfilter.lo `test -f 'tl-functionfilter.cpp' || echo '$(srcdir)/'`tl-functionfilter.cpp

libtlomp_nanos4_la-tl-loop.lo: tl-loop.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-loop.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-loop.Tpo -c -o libtlomp_nanos4_la-tl-loop.lo `test -f 'tl-loop.cpp' || echo '$(srcdir)/'`tl-loop.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-loop.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-loop.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-loop.cpp' object='libtlomp_nanos4_la-tl-loop.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-loop.lo `test -f 'tl-loop.cpp' || echo '$(srcdir)/'`tl-loop.cpp

libtlomp_nanos4_la-tl-master.lo: tl-master.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-master.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-master.Tpo -c -o libtlomp_nanos4_la-tl-master.lo `test -f 'tl-master.cpp' || echo '$(srcdir)/'`tl-master.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-master.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-master.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-master.cpp' object='libtlomp_nanos4_la-tl-master.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-master.lo `test -f 'tl-master.cpp' || echo '$(srcdir)/'`tl-master.cpp

libtlomp_nanos4_la-tl-datasharing.lo: tl-datasharing.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-datasharing.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-datasharing.Tpo -c -o libtlomp_nanos4_la-tl-datasharing.lo `test -f 'tl-datasharing.cpp' || echo '$(srcdir)/'`tl-datasharing.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-datasharing.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-datasharing.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-datasharing.cpp' object='libtlomp_nanos4_la-tl-datasharing.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-datasharing.lo `test -f 'tl-datasharing.cpp' || echo '$(srcdir)/'`tl-datasharing.cpp

libtlomp_nanos4_la-tl-debug.lo: tl-debug.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-debug.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-debug.Tpo -c -o libtlomp_nanos4_la-tl-debug.lo `test -f 'tl-debug.cpp' || echo '$(srcdir)/'`tl-debug.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-debug.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-debug.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-debug.cpp' object='libtlomp_nanos4_la-tl-debug.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-debug.lo `test -f 'tl-debug.cpp' || echo '$(srcdir)/'`tl-debug.cpp

libtlomp_nanos4_la-tl-symbols.lo: tl-symbols.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-symbols.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-symbols.Tpo -c -o libtlomp_nanos4_la-tl-symbols.lo `test -f 'tl-symbols.cpp' || echo '$(srcdir)/'`tl-symbols.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-symbols.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-symbols.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-symbols.cpp' object='libtlomp_nanos4_la-tl-symbols.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-symbols.lo `test -f 'tl-symbols.cpp' || echo '$(srcdir)/'`tl-symbols.cpp

libtlomp_nanos4_la-tl-warning.lo: tl-warning.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-warning.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-warning.Tpo -c -o libtlomp_nanos4_la-tl-warning.lo `test -f 'tl-warning.cpp' || echo '$(srcdir)/'`tl-warning.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-warning.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-warning.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-warning.cpp' object='libtlomp_nanos4_la-tl-warning.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-warning.lo `test -f 'tl-warning.cpp' || echo '$(srcdir)/'`tl-warning.cpp

libtlomp_nanos4_la-tl-ordered.lo: tl-ordered.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-ordered.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-ordered.Tpo -c -o libtlomp_nanos4_la-tl-ordered.lo `test -f 'tl-ordered.cpp' || echo '$(srcdir)/'`tl-ordered.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-ordered.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-ordered.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-ordered.cpp' object='libtlomp_nanos4_la-tl-ordered.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-ordered.lo `test -f 'tl-ordered.cpp' || echo '$(srcdir)/'`tl-ordered.cpp

libtlomp_nanos4_la-tl-outline.lo: tl-outline.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-outline.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-outline.Tpo -c -o libtlomp_nanos4_la-tl-outline.lo `test -f 'tl-outline.cpp' || echo '$(srcdir)/'`tl-outline.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-outline.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-outline.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-outline.cpp' object='libtlomp_nanos4_la-tl-outline.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-outline.lo `test -f 'tl-outline.cpp' || echo '$(srcdir)/'`tl-outline.cpp

libtlomp_nanos4_la-tl-parallel.lo: tl-parallel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-parallel.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-parallel.Tpo -c -o libtlomp_nanos4_la-tl-parallel.lo `test -f 'tl-parallel.cpp' || echo '$(srcdir)/'`tl-parallel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-parallel.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-parallel.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-parallel.cpp' object='libtlomp_nanos4_la-tl-parallel.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-parallel.lo `test -f 'tl-parallel.cpp' || echo '$(srcdir)/'`tl-parallel.cpp

libtlomp_nanos4_la-tl-parallel_for.lo: tl-parallel_for.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-parallel_for.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-parallel_for.Tpo -c -o libtlomp_nanos4_la-tl-parallel_for.lo `test -f 'tl-parallel_for.cpp' || echo '$(srcdir)/'`tl-parallel_for.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-parallel_for.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-parallel_for.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-parallel_for.cpp' object='libtlomp_nanos4_la-tl-parallel_for.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-parallel_for.lo `test -f 'tl-parallel_for.cpp' || echo '$(srcdir)/'`tl-parallel_for.cpp

libtlomp_nanos4_la-tl-parallel_sections.lo: tl-parallel_sections.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-parallel_sections.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-parallel_sections.Tpo -c -o libtlomp_nanos4_la-tl-parallel_sections.lo `test -f 'tl-parallel_sections.cpp' || echo '$(srcdir)/'`tl-parallel_sections.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-parallel_sections.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-parallel_sections.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-parallel_sections.cpp' object='libtlomp_nanos4_la-tl-parallel_sections.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-parallel_sections.lo `test -f 'tl-parallel_sections.cpp' || echo '$(srcdir)/'`tl-parallel_sections.cpp

libtlomp_nanos4_la-tl-reduction.lo: tl-reduction.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-reduction.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-reduction.Tpo -c -o libtlomp_nanos4_la-tl-reduction.lo `test -f 'tl-reduction.cpp' || echo '$(srcdir)/'`tl-reduction.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-reduction.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-reduction.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-reduction.cpp' object='libtlomp_nanos4_la-tl-reduction.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-reduction.lo `test -f 'tl-reduction.cpp' || echo '$(srcdir)/'`tl-reduction.cpp

libtlomp_nanos4_la-tl-section.lo: tl-section.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-section.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-section.Tpo -c -o libtlomp_nanos4_la-tl-section.lo `test -f 'tl-section.cpp' || echo '$(srcdir)/'`tl-section.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-section.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-section.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-section.cpp' object='libtlomp_nanos4_la-tl-section.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-section.lo `test -f 'tl-section.cpp' || echo '$(srcdir)/'`tl-section.cpp

libtlomp_nanos4_la-tl-sections.lo: tl-sections.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-sections.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-sections.Tpo -c -o libtlomp_nanos4_la-tl-sections.lo `test -f 'tl-sections.cpp' || echo '$(srcdir)/'`tl-sections.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-sections.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-sections.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-sections.cpp' object='libtlomp_nanos4_la-tl-sections.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-sections.lo `test -f 'tl-sections.cpp' || echo '$(srcdir)/'`tl-sections.cpp

libtlomp_nanos4_la-tl-single.lo: tl-single.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-single.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-single.Tpo -c -o libtlomp_nanos4_la-tl-single.lo `test -f 'tl-single.cpp' || echo '$(srcdir)/'`tl-single.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-single.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-single.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-single.cpp' object='libtlomp_nanos4_la-tl-single.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-single.lo `test -f 'tl-single.cpp' || echo '$(srcdir)/'`tl-single.cpp

libtlomp_nanos4_la-tl-spawn.lo: tl-spawn.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-spawn.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-spawn.Tpo -c -o libtlomp_nanos4_la-tl-spawn.lo `test -f 'tl-spawn.cpp' || echo '$(srcdir)/'`tl-spawn.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-spawn.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-spawn.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-spawn.cpp' object='libtlomp_nanos4_la-tl-spawn.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-spawn.lo `test -f 'tl-spawn.cpp' || echo '$(srcdir)/'`tl-spawn.cpp

libtlomp_nanos4_la-tl-spawn-old.lo: tl-spawn-old.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-spawn-old.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-spawn-old.Tpo -c -o libtlomp_nanos4_la-tl-spawn-old.lo `test -f 'tl-spawn-old.cpp' || echo '$(srcdir)/'`tl-spawn-old.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-spawn-old.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-spawn-old.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-spawn-old.cpp' object='libtlomp_nanos4_la-tl-spawn-old.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-spawn-old.lo `test -f 'tl-spawn-old.cpp' || echo '$(srcdir)/'`tl-spawn-old.cpp

libtlomp_nanos4_la-tl-declare.lo: tl-declare.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-declare.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-declare.Tpo -c -o libtlomp_nanos4_la-tl-declare.lo `test -f 'tl-declare.cpp' || echo '$(srcdir)/'`tl-declare.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-declare.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-declare.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-declare.cpp' object='libtlomp_nanos4_la-tl-declare.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-declare.lo `test -f 'tl-declare.cpp' || echo '$(srcdir)/'`tl-declare.cpp

libtlomp_nanos4_la-tl-task.lo: tl-task.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-task.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-task.Tpo -c -o libtlomp_nanos4_la-tl-task.lo `test -f 'tl-task.cpp' || echo '$(srcdir)/'`tl-task.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-task.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-task.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-task.cpp' object='libtlomp_nanos4_la-tl-task.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-task.lo `test -f 'tl-task.cpp' || echo '$(srcdir)/'`tl-task.cpp

libtlomp_nanos4_la-tl-taskwait.lo: tl-taskwait.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-taskwait.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-taskwait.Tpo -c -o libtlomp_nanos4_la-tl-taskwait.lo `test -f 'tl-taskwait.cpp' || echo '$(srcdir)/'`tl-taskwait.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-taskwait.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-taskwait.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-taskwait.cpp' object='libtlomp_nanos4_la-tl-taskwait.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-taskwait.lo `test -f 'tl-taskwait.cpp' || echo '$(srcdir)/'`tl-taskwait.cpp

libtlomp_nanos4_la-tl-taskyield.lo: tl-taskyield.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-taskyield.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-taskyield.Tpo -c -o libtlomp_nanos4_la-tl-taskyield.lo `test -f 'tl-taskyield.cpp' || echo '$(srcdir)/'`tl-taskyield.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-taskyield.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-taskyield.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-taskyield.cpp' object='libtlomp_nanos4_la-tl-taskyield.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-taskyield.lo `test -f 'tl-taskyield.cpp' || echo '$(srcdir)/'`tl-taskyield.cpp

libtlomp_nanos4_la-tl-taskgroup.lo: tl-taskgroup.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-taskgroup.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-taskgroup.Tpo -c -o libtlomp_nanos4_la-tl-taskgroup.lo `test -f 'tl-taskgroup.cpp' || echo '$(srcdir)/'`tl-taskgroup.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-taskgroup.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-taskgroup.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-taskgroup.cpp' object='libtlomp_nanos4_la-tl-taskgroup.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-taskgroup.lo `test -f 'tl-taskgroup.cpp' || echo '$(srcdir)/'`tl-taskgroup.cpp

libtlomp_nanos4_la-tl-threadprivate.lo: tl-threadprivate.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-threadprivate.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-threadprivate.Tpo -c -o libtlomp_nanos4_la-tl-threadprivate.lo `test -f 'tl-threadprivate.cpp' || echo '$(srcdir)/'`tl-threadprivate.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-threadprivate.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-threadprivate.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-threadprivate.cpp' object='libtlomp_nanos4_la-tl-threadprivate.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-threadprivate.lo `test -f 'tl-threadprivate.cpp' || echo '$(srcdir)/'`tl-threadprivate.cpp

libtlomp_nanos4_la-tl-transaction.lo: tl-transaction.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-transaction.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-transaction.Tpo -c -o libtlomp_nanos4_la-tl-transaction.lo `test -f 'tl-transaction.cpp' || echo '$(srcdir)/'`tl-transaction.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-transaction.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-transaction.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-transaction.cpp' object='libtlomp_nanos4_la-tl-transaction.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-transaction.lo `test -f 'tl-transaction.cpp' || echo '$(srcdir)/'`tl-transaction.cpp

libtlomp_nanos4_la-tl-adf.lo: tl-adf.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-adf.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-adf.Tpo -c -o libtlomp_nanos4_la-tl-adf.lo `test -f 'tl-adf.cpp' || echo '$(srcdir)/'`tl-adf.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-adf.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-adf.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-adf.cpp' object='libtlomp_nanos4_la-tl-adf.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-adf.lo `test -f 'tl-adf.cpp' || echo '$(srcdir)/'`tl-adf.cpp

libtlomp_nanos4_la-tl-transaction-expression.lo: tl-transaction-expression.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-transaction-expression.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-transaction-expression.Tpo -c -o libtlomp_nanos4_la-tl-transaction-expression.lo `test -f 'tl-transaction-expression.cpp' || echo '$(srcdir)/'`tl-transaction-expression.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-transaction-expression.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-transaction-expression.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-transaction-expression.cpp' object='libtlomp_nanos4_la-tl-transaction-expression.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-transaction-expression.lo `test -f 'tl-transaction-expression.cpp' || echo '$(srcdir)/'`tl-transaction-expression.cpp

libtlomp_nanos4_la-tl-pretransform.lo: tl-pretransform.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-pretransform.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-pretransform.Tpo -c -o libtlomp_nanos4_la-tl-pretransform.lo `test -f 'tl-pretransform.cpp' || echo '$(srcdir)/'`tl-pretransform.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-pretransform.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-pretransform.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-pretransform.cpp' object='libtlomp_nanos4_la-tl-pretransform.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-pretransform.lo `test -f 'tl-pretransform.cpp' || echo '$(srcdir)/'`tl-pretransform.cpp

libtlomp_nanos4_la-tl-target.lo: tl-target.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_nanos4_la-tl-target.lo -MD -MP -MF $(DEPDIR)/libtlomp_nanos4_la-tl-target.Tpo -c -o libtlomp_nanos4_la-tl-target.lo `test -f 'tl-target.cpp' || echo '$(srcdir)/'`tl-target.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_nanos4_la-tl-target.Tpo $(DEPDIR)/libtlomp_nanos4_la-tl-target.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-target.cpp' object='libtlomp_nanos4_la-tl-target.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_nanos4_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_nanos4_la-tl-target.lo `test -f 'tl-target.cpp' || echo '$(srcdir)/'`tl-target.cpp

libtlomp_serialize_la-tl-ompserialize.lo: tl-ompserialize.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_serialize_la_CXXFLAGS) $(CXXFLAGS) -MT libtlomp_serialize_la-tl-ompserialize.lo -MD -MP -MF $(DEPDIR)/libtlomp_serialize_la-tl-ompserialize.Tpo -c -o libtlomp_serialize_la-tl-ompserialize.lo `test -f 'tl-ompserialize.cpp' || echo '$(srcdir)/'`tl-ompserialize.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libtlomp_serialize_la-tl-ompserialize.Tpo $(DEPDIR)/libtlomp_serialize_la-tl-ompserialize.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tl-ompserialize.cpp' object='libtlomp_serialize_la-tl-ompserialize.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtlomp_serialize_la_CXXFLAGS) $(CXXFLAGS) -c -o libtlomp_serialize_la-tl-ompserialize.lo `test -f 'tl-ompserialize.cpp' || echo '$(srcdir)/'`tl-ompserialize.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(phasesdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-phasesLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-phasesLTLIBRARIES

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-phasesLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-phasesLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-phasesLTLIBRARIES \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-phasesLTLIBRARIES


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
